{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/vanshikamaheshwari/Desktop/untitled folder 2/frontend/src/contexts/CartContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useCallback, useMemo, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  items: []\n};\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      {\n        const existingItemIndex = state.items.findIndex(item => item.menuItemId === action.payload.id);\n        if (existingItemIndex > -1) {\n          // Item exists, increment quantity\n          const updatedItems = [...state.items];\n          updatedItems[existingItemIndex] = {\n            ...updatedItems[existingItemIndex],\n            quantity: updatedItems[existingItemIndex].quantity + 1\n          };\n          return {\n            ...state,\n            items: updatedItems\n          };\n        } else {\n          // Add new item\n          const newItem = {\n            menuItemId: action.payload.id,\n            name: action.payload.name,\n            price: action.payload.price,\n            quantity: 1\n          };\n          return {\n            ...state,\n            items: [...state.items, newItem]\n          };\n        }\n      }\n    case 'REMOVE_ITEM':\n      {\n        const updatedItems = state.items.filter(item => item.menuItemId !== action.payload.menuItemId);\n        return {\n          ...state,\n          items: updatedItems\n        };\n      }\n    case 'UPDATE_QUANTITY':\n      {\n        const {\n          menuItemId,\n          quantity\n        } = action.payload;\n        if (quantity <= 0) {\n          // Remove item if quantity is zero or less\n          return cartReducer(state, {\n            type: 'REMOVE_ITEM',\n            payload: {\n              menuItemId\n            }\n          });\n        }\n        const updatedItems = state.items.map(item => item.menuItemId === menuItemId ? {\n          ...item,\n          quantity\n        } : item);\n        return {\n          ...state,\n          items: updatedItems\n        };\n      }\n    case 'CLEAR_CART':\n      return initialState;\n    default:\n      return state;\n  }\n}\nexport const CartContext = /*#__PURE__*/createContext(undefined);\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  const addItem = useCallback(item => {\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: item\n    });\n  }, []);\n  const removeItem = useCallback(menuItemId => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: {\n        menuItemId\n      }\n    });\n  }, []);\n  const updateQuantity = useCallback((menuItemId, quantity) => {\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: {\n        menuItemId,\n        quantity\n      }\n    });\n  }, []);\n  const clearCart = useCallback(() => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  }, []);\n  const totalPrice = useMemo(() => {\n    return state.items.reduce((total, item) => total + item.price * item.quantity, 0);\n  }, [state.items]);\n  const totalItems = useMemo(() => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  }, [state.items]);\n  const value = useMemo(() => ({\n    ...state,\n    addItem,\n    removeItem,\n    updateQuantity,\n    clearCart,\n    totalPrice,\n    totalItems\n  }), [state, addItem, removeItem, updateQuantity, clearCart, totalPrice, totalItems]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\n_s(CartProvider, \"9gax//i9AI4CVwELTa2T4GpycFY=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createContext","useCallback","useMemo","useReducer","jsxDEV","_jsxDEV","initialState","items","cartReducer","state","action","type","existingItemIndex","findIndex","item","menuItemId","payload","id","updatedItems","quantity","newItem","name","price","filter","map","CartContext","undefined","CartProvider","children","dispatch","addItem","removeItem","updateQuantity","clearCart","totalPrice","reduce","total","totalItems","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vanshikamaheshwari/Desktop/untitled folder 2/frontend/src/contexts/CartContext.jsx"],"sourcesContent":["\n\"use client\";\n\nimport { createContext, useCallback, useMemo, useReducer } from 'react';\n\n\nconst initialState = {\n  items: [],\n};\n\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_ITEM': {\n      const existingItemIndex = state.items.findIndex(\n        (item) => item.menuItemId === action.payload.id\n      );\n      if (existingItemIndex > -1) {\n        // Item exists, increment quantity\n        const updatedItems = [...state.items];\n        updatedItems[existingItemIndex] = {\n          ...updatedItems[existingItemIndex],\n          quantity: updatedItems[existingItemIndex].quantity + 1,\n        };\n        return { ...state, items: updatedItems };\n      } else {\n        // Add new item\n        const newItem = {\n          menuItemId: action.payload.id,\n          name: action.payload.name,\n          price: action.payload.price,\n          quantity: 1,\n        };\n        return { ...state, items: [...state.items, newItem] };\n      }\n    }\n    case 'REMOVE_ITEM': {\n      const updatedItems = state.items.filter(\n        (item) => item.menuItemId !== action.payload.menuItemId\n      );\n      return { ...state, items: updatedItems };\n    }\n    case 'UPDATE_QUANTITY': {\n      const { menuItemId, quantity } = action.payload;\n      if (quantity <= 0) {\n        // Remove item if quantity is zero or less\n        return cartReducer(state, { type: 'REMOVE_ITEM', payload: { menuItemId } });\n      }\n      const updatedItems = state.items.map((item) =>\n        item.menuItemId === menuItemId ? { ...item, quantity } : item\n      );\n      return { ...state, items: updatedItems };\n    }\n    case 'CLEAR_CART':\n      return initialState;\n    default:\n      return state;\n  }\n}\n\n\nexport const CartContext = createContext(undefined);\n\nexport function CartProvider({ children }) {\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  const addItem = useCallback((item) => {\n    dispatch({ type: 'ADD_ITEM', payload: item });\n  }, []);\n\n  const removeItem = useCallback((menuItemId) => {\n    dispatch({ type: 'REMOVE_ITEM', payload: { menuItemId } });\n  }, []);\n\n  const updateQuantity = useCallback((menuItemId, quantity) => {\n    dispatch({ type: 'UPDATE_QUANTITY', payload: { menuItemId, quantity } });\n  }, []);\n\n  const clearCart = useCallback(() => {\n    dispatch({ type: 'CLEAR_CART' });\n  }, []);\n\n  const totalPrice = useMemo(() => {\n    return state.items.reduce((total, item) => total + item.price * item.quantity, 0);\n  }, [state.items]);\n\n   const totalItems = useMemo(() => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  }, [state.items]);\n\n  const value = useMemo(() => ({\n    ...state,\n    addItem,\n    removeItem,\n    updateQuantity,\n    clearCart,\n    totalPrice,\n    totalItems,\n  }), [state, addItem, removeItem, updateQuantity, clearCart, totalPrice, totalItems]);\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}