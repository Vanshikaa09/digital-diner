{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api';\n\n// Menu Items\nexport const fetchMenu = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/menu`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching menu:', error);\n    // Return mock data for development if API is not available\n    return [{\n      id: 1,\n      name: 'Veggie Burger',\n      description: 'Fresh veggie patty with lettuce, tomato, and special sauce',\n      price: 499,\n      imageUrl: 'https://via.placeholder.com/300x200?text=Veggie+Burger'\n    }, {\n      id: 2,\n      name: 'Chicken Pizza',\n      description: 'Homemade pizza with grilled chicken, bell peppers, and mozzarella',\n      price: 799,\n      imageUrl: 'https://via.placeholder.com/300x200?text=Chicken+Pizza'\n    }, {\n      id: 3,\n      name: 'Chocolate Milkshake',\n      description: 'Creamy chocolate milkshake with whipped cream',\n      price: 249,\n      imageUrl: 'https://via.placeholder.com/300x200?text=Chocolate+Milkshake'\n    }, {\n      id: 4,\n      name: 'Fish & Chips',\n      description: 'Crispy fried fish fillet with seasoned French fries',\n      price: 599,\n      imageUrl: 'https://via.placeholder.com/300x200?text=Fish+And+Chips'\n    }, {\n      id: 5,\n      name: 'Caesar Salad',\n      description: 'Fresh romaine lettuce with Caesar dressing, croutons, and parmesan',\n      price: 349,\n      imageUrl: 'https://via.placeholder.com/300x200?text=Caesar+Salad'\n    }, {\n      id: 6,\n      name: 'Veg Noodles',\n      description: 'Stir-fried noodles with mixed vegetables in soy sauce',\n      price: 399,\n      imageUrl: 'https://via.placeholder.com/300x200?text=Veg+Noodles'\n    }];\n  }\n};\n\n// Orders\nexport const createOrder = async orderData => {\n  try {\n    const response = await axios.post(`${API_URL}/orders, orderData`);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    // Mock response for development\n    return {\n      id: Math.floor(Math.random() * 10000),\n      ...orderData,\n      created_at: new Date().toISOString(),\n      status: 'pending'\n    };\n  }\n};\nexport const fetchOrderItems = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/orders`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    // Mock data for development\n    return [{\n      id: 1001,\n      customer_name: 'John Doe',\n      customer_email: 'john@example.com',\n      customer_phone: '555-123-4567',\n      total_amount: 1048,\n      status: 'completed',\n      items: [{\n        name: 'Veggie Burger',\n        quantity: 1,\n        price: 499\n      }, {\n        name: 'Chocolate Milkshake',\n        quantity: 1,\n        price: 249\n      }, {\n        name: 'Caesar Salad',\n        quantity: 1,\n        price: 300\n      }],\n      created_at: '2025-04-30T10:45:00Z'\n    }, {\n      id: 1002,\n      customer_name: 'Jane Smith',\n      customer_email: 'jane@example.com',\n      customer_phone: '555-987-6543',\n      total_amount: 799,\n      status: 'pending',\n      items: [{\n        name: 'Chicken Pizza',\n        quantity: 1,\n        price: 799\n      }],\n      created_at: '2025-04-30T11:15:00Z'\n    }];\n  }\n};\n\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:3000/api';\n\n// export const fetchMenu = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/menu`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching menu:', error);\n//     return [];\n//   }\n// };\n\n// export const createOrder = async (orderData) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/orders`, orderData);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error creating order:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchOrders = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/orders`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching orders:', error);\n//     return [];\n//   }\n// };\n\n// export const createOrderItem = async (orderItemData) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/order-items`, orderItemData);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error creating order item:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchOrderItems = async (orderId) => {\n//   try {\n//     const response = await axios.get(`${API_URL}/order-items/${orderId}`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching order items:', error);\n//     return [];\n//   }\n// };","map":{"version":3,"names":["axios","API_URL","fetchMenu","response","get","data","error","console","id","name","description","price","imageUrl","createOrder","orderData","post","Math","floor","random","created_at","Date","toISOString","status","fetchOrderItems","customer_name","customer_email","customer_phone","total_amount","items","quantity"],"sources":["/Users/vanshikamaheshwari/Desktop/untitled folder 2/frontend/src/api.js"],"sourcesContent":["\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/api';\n\n// Menu Items\nexport const fetchMenu = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/menu`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching menu:', error);\n    // Return mock data for development if API is not available\n    return [\n      {\n        id: 1,\n        name: 'Veggie Burger',\n        description: 'Fresh veggie patty with lettuce, tomato, and special sauce',\n        price: 499,\n        imageUrl: 'https://via.placeholder.com/300x200?text=Veggie+Burger'\n      },\n      {\n        id: 2,\n        name: 'Chicken Pizza',\n        description: 'Homemade pizza with grilled chicken, bell peppers, and mozzarella',\n        price: 799,\n        imageUrl: 'https://via.placeholder.com/300x200?text=Chicken+Pizza'\n      },\n      {\n        id: 3,\n        name: 'Chocolate Milkshake',\n        description: 'Creamy chocolate milkshake with whipped cream',\n        price: 249,\n        imageUrl: 'https://via.placeholder.com/300x200?text=Chocolate+Milkshake'\n      },\n      {\n        id: 4,\n        name: 'Fish & Chips',\n        description: 'Crispy fried fish fillet with seasoned French fries',\n        price: 599,\n        imageUrl: 'https://via.placeholder.com/300x200?text=Fish+And+Chips'\n      },\n      {\n        id: 5,\n        name: 'Caesar Salad',\n        description: 'Fresh romaine lettuce with Caesar dressing, croutons, and parmesan',\n        price: 349,\n        imageUrl: 'https://via.placeholder.com/300x200?text=Caesar+Salad'\n      },\n      {\n        id: 6,\n        name: 'Veg Noodles',\n        description: 'Stir-fried noodles with mixed vegetables in soy sauce',\n        price: 399,\n        imageUrl: 'https://via.placeholder.com/300x200?text=Veg+Noodles'\n      }\n    ];\n  }\n};\n\n// Orders\nexport const createOrder = async (orderData) => {\n  try {\n    const response = await axios.post(`${API_URL}/orders, orderData`);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    // Mock response for development\n    return {\n      id: Math.floor(Math.random() * 10000),\n      ...orderData,\n      created_at: new Date().toISOString(),\n      status: 'pending'\n    };\n  }\n};\nexport const fetchOrderItems = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/orders`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    // Mock data for development\n    return [\n      {\n        id: 1001,\n        customer_name: 'John Doe',\n        customer_email: 'john@example.com',\n        customer_phone: '555-123-4567',\n        total_amount: 1048,\n        status: 'completed',\n        items: [\n          { name: 'Veggie Burger', quantity: 1, price: 499 },\n          { name: 'Chocolate Milkshake', quantity: 1, price: 249 },\n          { name: 'Caesar Salad', quantity: 1, price: 300 }\n        ],\n        created_at: '2025-04-30T10:45:00Z'\n      },\n      {\n        id: 1002,\n        customer_name: 'Jane Smith',\n        customer_email: 'jane@example.com',\n        customer_phone: '555-987-6543',\n        total_amount: 799,\n        status: 'pending',\n        items: [\n          { name: 'Chicken Pizza', quantity: 1, price: 799 }\n        ],\n        created_at: '2025-04-30T11:15:00Z'\n      }\n    ];\n  }\n};\n\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:3000/api';\n\n// export const fetchMenu = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/menu`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching menu:', error);\n//     return [];\n//   }\n// };\n\n// export const createOrder = async (orderData) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/orders`, orderData);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error creating order:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchOrders = async () => {\n//   try {\n//     const response = await axios.get(`${API_URL}/orders`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching orders:', error);\n//     return [];\n//   }\n// };\n\n// export const createOrderItem = async (orderItemData) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/order-items`, orderItemData);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error creating order item:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchOrderItems = async (orderId) => {\n//   try {\n//     const response = await axios.get(`${API_URL}/order-items/${orderId}`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching order items:', error);\n//     return [];\n//   }\n// };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}